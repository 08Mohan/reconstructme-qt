CMAKE_MINIMUM_REQUIRED(VERSION 2.8.5)

PROJECT(reconstructme-qt)

# Version of GUI
SET(RECONSTRUCTMEQT_VERSION_MAJOR "1" CACHE STRING "Version Major")
SET(RECONSTRUCTMEQT_VERSION_MINOR "0" CACHE STRING "Version Minor")
SET(RECONSTRUCTMEQT_VERSION_BUILD "0" CACHE STRING "Version Build")
SET(RECONSTRUCTMEQT_ENABLE_CONSOLE OFF CACHE BOOL "When enabled shows a console on windows")

# QT Components
FIND_PACKAGE(Qt4 COMPONENTS QtCore QtGUI QtOpenGL QUIET)

# Find ReconstructMe SDK
FIND_PACKAGE(ReconstructMeSDK 1.0)

# include protobuf and set paths manually
SET(PROTOBUF_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/3rd_party/protobuf-2.4.1/src)
SET(PROTOBUF_LITE_LIBRARY ${CMAKE_CURRENT_SOURCE_DIR}/3rd_party/protobuf-2.4.1/bin/libprotobuf-lite.lib)
SET(PROTOBUF_LITE_LIBRARY_DEBUG ${CMAKE_CURRENT_SOURCE_DIR}/3rd_party/protobuf-2.4.1/bin/libprotobuf-lited.lib)
SET(PROTOBUF_PROTOC_EXECUTABLE ${CMAKE_CURRENT_SOURCE_DIR}/3rd_party/protobuf-2.4.1/protoc.exe)

MESSAGE(STATUS "PROTOBUF_INCLUDE_DIR='${PROTOBUF_INCLUDE_DIR}'")
MESSAGE(STATUS "PROTOBUF_LITE_LIBRARY='${PROTOBUF_LITE_LIBRARY}'")
MESSAGE(STATUS "PROTOBUF_LITE_LIBRARY_DEBUG='${PROTOBUF_LITE_LIBRARY_DEBUG}'")
MESSAGE(STATUS "PROTOBUF_PROTOC_EXECUTABLE='${PROTOBUF_PROTOC_EXECUTABLE}'")

INCLUDE(FindProtobuf)

# If both, RecontstructMeSDK and QT4 is installed on your PC
IF(QT4_FOUND)# AND RECONSTRUCTMESDK_FOUND) # RECONSTRUCTMESDK_FOUND is not set for some reason
	FILE(GLOB_RECURSE HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/inc/*.h)
	FILE(GLOB_RECURSE SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp)
	FILE(GLOB_RECURSE QT_UI ${CMAKE_CURRENT_SOURCE_DIR}/ui/*.ui)
	FILE(GLOB_RECURSE QT_RC ${CMAKE_CURRENT_SOURCE_DIR}/rc/*.qrc)
	CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/inc/defines.h.in ${CMAKE_CURRENT_BINARY_DIR}/defines.h)

	IF (WIN32)
	  SET(WIN_RC_GENERATED ${CMAKE_CURRENT_BINARY_DIR}/resource_windows.rc)
	  CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/rc/resource_windows.rc.in ${WIN_RC_GENERATED})	  
	  IF (NOT RECONSTRUCTMEQT_ENABLE_CONSOLE)
	    SET(EXECUTABLE_FLAGS WIN32)
	  ELSE()
	    SET(EXECUTABLE_FLAGS )
	  ENDIF()
	ENDIF()

	QT4_WRAP_CPP(QT_HEADERS_GENERATED ${HEADERS})
	QT4_WRAP_UI(QT_UI_GENERATED ${QT_UI})
	QT4_ADD_RESOURCES(QT_RC_GENERATED ${QT_RC})
	QT4_AUTOMOC(${SOURCES})
	
	PROTOBUF_GENERATE_CPP(PROTO_SRCS PROTO_HDRS proto/opencl_info.proto proto/hardware.proto)
	
	SOURCE_GROUP("generated files" FILES ${QT_HEADERS_GENERATED})
	SOURCE_GROUP("generated files" FILES ${QT_SOURCES_GENERATED})
	SOURCE_GROUP("generated files" FILES ${QT_RC_GENERATED})
	SOURCE_GROUP("generated files" FILES ${QT_UI_GENERATED})
	SOURCE_GROUP("generated files" FILES ${WIN_RC_GENERATED})
	SOURCE_GROUP("generated files" FILES ${CMAKE_CURRENT_BINARY_DIR}/defines.h)

	INCLUDE(${QT_USE_FILE})
	INCLUDE_DIRECTORIES(
		${CMAKE_CURRENT_BINARY_DIR} 
		${CMAKE_CURRENT_SOURCE_DIR}/inc 
		${RECONSTRUCTMESDK_INCLUDE_DIRS} 
		${PROTOBUF_INCLUDE_DIR})
	
	ADD_DEFINITIONS(${QT_DEFINITIONS})
	ADD_DEFINITIONS(-DNOMINMAX)

	ADD_EXECUTABLE(ReconstructMeQt ${EXECUTABLE_FLAGS}
		${HEADERS}
		${SOURCES}
		${QT_HEADERS_GENERATED}
		${QT_UI_GENERATED}
		${QT_RC_GENERATED}
		${WIN_RC_GENERATED}
		${QT_UI}
		${QT_RC}
		${PROTO_HDRS}
		${PROTO_SRCS}
		${CMAKE_CURRENT_BINARY_DIR}/defines.h)
	
	TARGET_LINK_LIBRARIES(ReconstructMeQt 
		${QT_LIBRARIES} 
		${RECONSTRUCTMESDK_LIBRARIES} 
		${PROTOBUF_LITE_LIBRARY}
		${PROTOBUF_LITE_LIBRARY_DEBUG})
ELSE()
	MESSAGE(STATUS "ReconstructMeQt disabled because ReconstructMeSDK or QT4 is not present")
ENDIF()